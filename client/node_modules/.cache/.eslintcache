[{"/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/index.js":"1","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/reportWebVitals.js":"2","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/App.js":"3","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_reducers/chart_reducer.js":"4","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_reducers/user_reducer.js":"5","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_reducers/index.js":"6","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_actions/types.js":"7","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/RegisterPage/RegisterPage.js":"8","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/LandingPage/LandingPage.js":"9","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/LoginPage/LoginPage.js":"10","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/MainPage/MainPage.js":"11","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_actions/user_action.js":"12","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_chart/CoinList.js":"13","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_Trade/Trade_check.js":"14","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_chart/ApexChart.js":"15","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/Footer/Footer.js":"16","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/Header/Header.js":"17","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_Trade/Trade_info.js":"18","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_Trade/Trade_selling.js":"19","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_chart/Coin_mp.js":"20","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_Trade/Trade_buying.js":"21","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_chart/CoinItem.js":"22","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_actions/chart_action.js":"23"},{"size":1673,"mtime":1668275028748,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1663251450895,"results":"26","hashOfConfig":"25"},{"size":1181,"mtime":1668106128794,"results":"27","hashOfConfig":"25"},{"size":310,"mtime":1668273308029,"results":"28","hashOfConfig":"25"},{"size":646,"mtime":1668283291277,"results":"29","hashOfConfig":"30"},{"size":296,"mtime":1668273308029,"results":"31","hashOfConfig":"25"},{"size":205,"mtime":1668273308029,"results":"32","hashOfConfig":"25"},{"size":4013,"mtime":1668283146332,"results":"33","hashOfConfig":"30"},{"size":2403,"mtime":1668283150006,"results":"34","hashOfConfig":"30"},{"size":1629,"mtime":1668280431914,"results":"35","hashOfConfig":"25"},{"size":661,"mtime":1668106127056,"results":"36","hashOfConfig":"25"},{"size":1124,"mtime":1668188738981,"results":"37","hashOfConfig":"25"},{"size":3728,"mtime":1667798897262,"results":"38","hashOfConfig":"25"},{"size":1942,"mtime":1667798897262,"results":"39","hashOfConfig":"25"},{"size":4658,"mtime":1668273308028,"results":"40","hashOfConfig":"25"},{"size":232,"mtime":1663172770707,"results":"41","hashOfConfig":"25"},{"size":661,"mtime":1667487547443,"results":"42","hashOfConfig":"25"},{"size":85,"mtime":1667487547441,"results":"43","hashOfConfig":"25"},{"size":3243,"mtime":1667487547441,"results":"44","hashOfConfig":"25"},{"size":873,"mtime":1667798897262,"results":"45","hashOfConfig":"25"},{"size":3274,"mtime":1668106001053,"results":"46","hashOfConfig":"25"},{"size":1455,"mtime":1668273308028,"results":"47","hashOfConfig":"25"},{"size":161,"mtime":1668273308029,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qgo4aw",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mbncl1",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"56"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"56"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"56"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"56"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"56"},"/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/index.js",["137"],[],"/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/reportWebVitals.js",["138"],[],"const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",["139","140"],"/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/App.js",["141"],[],"import './App.css';\nimport {\n  BrowserRouter,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport LandingPage from './components/views/LandingPage/LandingPage'\nimport LoginPage from './components/views/LoginPage/LoginPage'\nimport RegisterPage from './components/views/RegisterPage/RegisterPage'\nimport MainPage from './components/views/MainPage/MainPage'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Routes>\n      <Route exact path=\"/\" element={<LandingPage/>}></Route>\n      <Route exact path=\"/login\" element={<LoginPage/>}></Route>\n      <Route exact path=\"/register\" element={<RegisterPage/>}></Route>\n      <Route exact path=\"/main\" element={<MainPage/>}></Route>\n    </Routes>\n    </BrowserRouter>\n    \n    /*\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n    */\n  );\n}\n\nexport default App;\n","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_reducers/chart_reducer.js",["142"],[],"import {\n    BTC, XRP\n} from '../_actions/types';\n\nconst initState = {\n    type:BTC,\n    str:BTC\n}\n\n\nexport default function(state = initState, action) {\n    \n    switch(action.type){\n        case XRP:\n            return {...state,  str:action.str}\n        \n        default:\n            return state;\n    }\n}\n\n","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_reducers/user_reducer.js",["143"],[],"/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_reducers/index.js",["144"],[],"import { combineReducers } from 'redux';\n//reducer들 다 import \nimport user from './user_reducer';\nimport chart from './chart_reducer';\nimport { useSelector } from 'react-redux';\n\nconst rootReducer = combineReducers({\n    chartState: chart,\n    userState: user,\n});\n\nexport default rootReducer;","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_actions/types.js",["145"],[],"\nexport const LOGIN_USER = \"login_user\";\nexport const TRADING_START = \"trading_start\";\nexport const REGISTER_USER = \"register_user\";\n\n//coin chart types \nexport const BTC = \"BTC\";\nexport const XRP = \"XRP\";","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/RegisterPage/RegisterPage.js",[],[],"/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/LandingPage/LandingPage.js",["146","147","148"],[],"/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/LoginPage/LoginPage.js",["149"],[],"/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/MainPage/MainPage.js",["150"],[],"import React from 'react';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport './MainPage.css'\nimport ApexChart from '../../../Coin_chart/ApexChart';\nimport CoinList from '../../../Coin_chart/CoinList';\nimport Trade_check from '../../../Coin_Trade/Trade_check';\n\n\nfunction MainPage (){ \n\n    return (\n        <div className='layout'>\n          <Header/>\n          <body>\n            <main className='main'>\n              <ApexChart></ApexChart>\n              <CoinList></CoinList>\n              <Trade_check></Trade_check>\n            </main>\n          </body>\n          <Footer/>\n        </div>\n  )\n}\n\n\nexport default MainPage","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_actions/user_action.js",["151"],[],"import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    TRADING_START\n} from './types';\n\n/**\n * 서버로 로그인 요청 함수\n * @param {*} User { email, password }\n * @returns \n */\nexport function loginUser(dataToSubmit) {\n  const request = axios.post('/api/users/login', dataToSubmit)\n    .then(response => response.data);\n  \n  //reducer에 넘김 \n  return {\n    type: LOGIN_USER,\n    payload: request\n  }\n}\n\n/**\n * 서버로 회원가입 요청 함수\n * @param {*} User { name, email, password }\n * @returns \n */\nexport function registerUser(dataToSubmit) {\n  const request = axios.post('/api/users/register', dataToSubmit)\n    .then(response => response.data);\n  //reducer에 넘김 \n  return {\n    type: REGISTER_USER,\n    payload: request\n  }\n}\n\n/**\n * 코인 api key 입력받아 일치 확인 요청 함수 \n * @param {*} String apikey \n * @returns \n */\nexport function tradingStart(dataToSubmit) {\n    const request = axios.post('/api/users/coin/tarding', dataToSubmit)\n      .then(response =>  response.data )\n\n      return{\n        type: TRADING_START,\n        payload: request\n      }\n}\n","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_chart/CoinList.js",["152"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./CoinList.css\";\nimport CoinItem from \"./CoinItem\";\nimport Table from '@material-ui/core/Table';\nimport  TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from 'axios'\n\n\n\n\n// const styles = theme => ({\n//     root: {\n//         width: '100%',\n//         marginTop: theme.spacing.unit * 3,\n//         overflowX : \"auto\"\n//     },\n//     table: {\n//         minWidth : 1080\n//     }\n// })\n\nconst coininfo = [\n        {\n            \n            \"tag\" : \"BTC\",\n            \"name_ko\" : \"비트코인\",\n            \"currency\" : \"0\"\n            \n        },\n        {\n            \"tag\" : \"ETH\",\n            \"name_ko\" : \"이더리움\",\n            \"currency\" : \"0\"\n        },\n        {\n            \"tag\" : \"XRP\",\n            \"name_ko\" : \"리플\",\n            \"currency\" : \"0\"\n        },\n        {\n            \"tag\": \"ETC\",\n            \"name_ko\": \"이더리움클래식\",\n            \"currency\": \"0\"\n        },\n        {\n            \"tag\": \"ADA\",\n            \"name_ko\": \"에이다\",\n            \"currency\": \"0\"\n        },\n        {\n            \"tag\": \"SAND\",\n            \"name_ko\": \"샌드박스\",\n            \"currency\": \"0\"\n        },\n        {\n            \"tag\": \"EOS\",\n            \"name_ko\": \"이오스\",\n            \"currency\": \"0\"\n        },\n        {\n            \"tag\": \"SOL\",\n            \"name_ko\": \"솔라나\",\n            \"currency\": \"0\"\n        },\n        {\n            \"tag\": \"DOGE\",\n            \"name_ko\": \"도지코인\",\n            \"currency\": \"0\"\n        },\n];\n\n\n\n\nfunction CoinList (){\n    // render(){\n        // const { classes } = this.props;\n        const [price, setprice] = useState(0);\n        var num = 0;\n        useEffect(()=>{\n            // const getApi_day = async() =>{ \n            //     for(let i=0;i<9;i++){\n            //         await axios.get('https://api.upbit.com/v1/candles/days/?market=KRW-'+ coininfo[i].tag +'&count=1').then((res) =>{\n            //             for(let j = 0; j < res.data.length; j++){\n            //                 if(res.data[j].market != null){\n            //                         setprice(prev => {return [...prev, res.data[j]]})\n            //                         console.log(num);\n            //                         coininfo[0].currency = price;\n            //                         num+=1;\n            //                 }else{\n            //                     alert(\"error\");\n            //                 }\n            //             }\n            //             if(num === 10){\n            //                 num = 0;\n            //             }\n            //         }) \n            //     }\n            // }\n            // getApi_day();\n        })\n        return(\n            <div className=\"list\">\n                {/* <Table className = {classes.table}> */}\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>한글명</TableCell>\n                            <TableCell>현재가</TableCell>\n                            <TableCell>태그</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {coininfo.map(c=>{ \n                        return(<CoinItem tag = {c.tag} name_ko = {c.name_ko} currency = {c.currency}/>)})}\n                    </TableBody>\n                </Table>\n\n            </div>\n        )\n    }\n// }\n\n// export default withStyles(styles)(CoinList);\nexport default CoinList;\n\n\n\n\n\n\n\n\n\n\n\n ","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_Trade/Trade_check.js",["153"],[],"import React, { useEffect, useState } from \"react\";\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport \"./Trade_check.css\";\n// import styled, {css} from \"styled-components\";\nimport {Button} from 'react-bootstrap';\nimport Trade_buying from \"./Trade_buying\";\nimport Trade_selling from \"./Trade_selling\";\nimport Trade_info from \"./Trade_info\";\nimport Coin_mp from \"../Coin_chart/Coin_mp\";\n\n\n\nfunction Trade_check(){\n    const [sell_price, set_sell_price] = useState(0);\n    const [quantity, set_quantity ] = useState(0);\n    const [sum_price , set_sum_price] = useState(0);\n    const [checkValue, setCheckValue ] = useState('');\n    const [isBuying, setIsBuying] = useState(1);\n\n    function checkOnlyOne(id) {\n        console.log('id', id);\n        let checkPick = document.getElementsByName('check');\n        Array.prototype.forEach.call(checkPick, function (el) {\n          console.log('el', el);\n          el.checked = false;\n        });\n        id.target.checked = true;\n        setCheckValue(id.target.defaultValue);\n    }\n\n    const table_selling_fuc = () =>{\n        setIsBuying(2);\n    }\n    \n    const table_buying_fuc = () =>{\n        setIsBuying(1);\n    }\n\n    const table_transinfo_fuc = () =>{\n        setIsBuying(3);\n    }\n\n\n    return(\n        <TableRow className=\"Table_trade\">\n                <TableCell className=\"Table_buying\" onClick={table_buying_fuc}>매수</TableCell>\n                <TableCell className=\"Table_selling\" onClick={table_selling_fuc}>매도</TableCell>\n                <TableCell className=\"Table_bill\" onClick={table_transinfo_fuc}>거래내역</TableCell>\n        <div>\n            {isBuying == 1  && <Trade_buying/>}\n        </div>\n        <div>\n            {isBuying == 2  && <Trade_selling/>}\n        </div>\n        <div>\n            {isBuying == 3  && <Trade_info/>}\n        </div>\n        </TableRow>\n    )\n}\n\n\n\nexport default Trade_check","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_chart/ApexChart.js",["154"],[],"import React, {useEffect, useState} from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport dayjs from 'dayjs'\nimport axios from 'axios'\nimport {useSelector} from 'react-redux';\nimport { Button } from \"react-bootstrap\";\nimport \"./ApexChart.css\";\nimport chart_reducer from \"../_reducers/chart_reducer\";\nimport Reducer from \"../_reducers\";\n\n\nexport default function ApexChart(){\n    const [minute_, set_minute_] = useState(60);\n    const [time_, set_time_] = useState(true);\n    const [coinInfo, setcoinInfo] = useState([]);\n    const coin_name_ = useSelector(Reducer => Reducer.chartState.str);\n\n//Upbit API\n    // 일별로 데이터 받을 때 \n    const getApi_day = async(coin_name) =>{ \n      await axios.get('https://api.upbit.com/v1/candles/days/?market=KRW-'+ coin_name +'&count=100')\n      .then((res) =>{\n        console.log(res);\n        for(let i = 0; i < res.data.length; i++){\n          if(res.data[i].market != null){\n              setcoinInfo(prev => {return [...prev, res.data[i]]})\n          }else{\n              alert(\"error\");\n          }\n        }\n      }) \n    }\n      // console.log(minute_);\n    // 분당 데이터 받을 때 \n    const getApi_minute = async(coin_name) =>{\n      await axios.get('https://api.upbit.com/v1/candles/minutes/'+minute_+'/?market=KRW-'+ coin_name +'&count=100')\n      .then((res) =>{\n      for(let i = 0; i < res.data.length; i++){\n          if(res.data[i].market != null){\n                  setcoinInfo(prev => {return [...prev, res.data[i]]})\n          }else{\n              alert(\"error\");\n          }\n      }\n      }) \n      // console.log(minute_);\n    }\n    useEffect(() => {\n      console.log(\"coin::\", coin_name_);\n      time_ ? (getApi_day(coin_name_)) : (getApi_minute(coin_name_));\n    },[coin_name_ , minute_, time_])\n\n    // 시간을 바꾸는 함수 \n    const change_minute = (time) =>{\n      set_minute_(time);\n      set_time_(false);\n    }\n\n    // 일을 바꾸는 함수 \n    const change_day = () =>{  \n      // set_minute_(time);\n      set_time_(true);\n    }\n\n    const [time, setTime] = useState([]);\n    const [open, setOpen] = useState([]);\n    const [low, setLow] = useState([]);\n    const [close, setClose] = useState([]);\n    const [high, setHigh] = useState([]);\n    const [data_ex, setData_ex] = useState([]);\n    time.length = 0;\n    open.length = 0;\n    low.length = 0;\n    close.length = 0;\n    high.length = 0;\n    data_ex.length = 0;\n\n\n    // console.log(xrpInfo)\n    coinInfo.map(({candle_date_time_kst, opening_price, high_price, low_price, trade_price}) =>{\n      time.push(candle_date_time_kst);\n      open.push(opening_price);\n      high.push(high_price);\n      low.push(low_price);\n      close.push(trade_price);\n    });\n\n    time.reverse();\n    open.reverse();\n    high.reverse();\n    low.reverse();\n    close.reverse();\n\n    for(let i=0;i<time.length;i++){\n      data_ex.push({x:time[i], y:[open[i],high[i],low[i],close[i]]});\n    }\n\n    coinInfo.length = 0;\n    const series = [{\n      name: 'candle',\n      data: data_ex\n      },] \n\n    const options = {\n            chart: {\n              height: 350,\n              type: 'candlestick',\n            },\n            title: {\n              text: coin_name_+\" Chart\",\n              align: 'left'\n            },\n            subtitle:{\n              text: close[99]+ \" KRW\",\n              align: 'left',\n              style: {\n                fontSize:  '20px',\n                fontWeight:  'bold',\n                fontFamily:  undefined,\n                color:  '#50bcdf'\n              },\n            },\n            xaxis: {\n              type: 'category',\n              labels: {\n                formatter: function(val){\n                  return dayjs(val).format('MMM DD HH:mm')\n                }\n              }\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true\n              }\n            }\n          }\n\n      return (\n  <div id=\"chart\">\n    <div>\n    <Button className=\"btn_oneminite\" onClick={() => change_minute(1)} >1분</Button>\n    <Button className=\"btn_thirtyminite\" onClick={() => change_minute(30)}>30분</Button>\n    <Button className=\"btn_onehour\" onClick={() => change_minute(60)}>1시간</Button>\n    <Button className=\"btn_fourhour\" onClick={() => change_minute(240)}>4시간</Button>  \n    <Button className=\"btn_oneday\" onClick={() => change_day()}>1일</Button> \n    </div> \n    {/* <Button onClick={()=>setname('BTC')}>클릭</Button> */}\n<ReactApexChart options={options} series={series} type=\"candlestick\" height={400} width={500}/>\n  </div>\n      );\n}\n\n\n// export default connect(mapStateToProps)(ApexChart);\n// export default ApexChart;","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/Footer/Footer.js",["155"],[],"import React from 'react';\n\nconst Footer = () => {\n  return(\n    <footer className='footer'>\n      <div className='contents'>\n        <h2 className='title'>푸터부분.</h2>\n      </div>\n    </footer>\n\n  )\n}\n\nexport default Footer;","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/components/views/Header/Header.js",["156"],[],"import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './Header.css'\n\nconst MenuItem = ({active, children, to}) => (\n  <div className='menu-item'>{children}</div>\n);\n\n\n\nconst Header = () => {\n  return(\n    <header className='header'>\n      <div>\n        \n        <div className='menu'>\n          <Button className='btn_inputstock'>주식</Button>\n          <Button className='btn_inputcoin'>코인</Button>\n          <MenuItem>홈</MenuItem>\n          <MenuItem>포트폴리오</MenuItem>\n          <MenuItem>내정보</MenuItem>\n          <MenuItem>공지</MenuItem>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Header;","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_Trade/Trade_info.js",["157"],[],"import React from \"react\";\n\n\nconst Trade_info = () =>{\n\n}\n\nexport default Trade_info;","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_Trade/Trade_selling.js",["158"],[],"import React from \"react\";\nimport {useEffect, useState } from \"react\";\nimport { Button} from 'react-bootstrap';\n\n\nconst Trade_selling = () =>{\n    const [sell_price, set_sell_price] = useState(0);\n    const [quantity, set_quantity ] = useState(0);\n    const [sum_price , set_sum_price] = useState(0);\n    const [checkValue, setCheckValue ] = useState('');\n    const [isBuying, setIsBuying] = useState(true);\n\n \n    const onChange_sell = (e) =>{\n        set_sell_price(e.target.value);\n        // set_quantity(quantity);\n        // const sum = quantity * sell_price;\n        // set_sum_price(sum);\n    }\n    const onClick_plus = () =>{\n        set_sell_price(parseInt(sell_price) + 1);\n    }\n    const onClick_minus = () =>{\n        set_sell_price(parseInt(sell_price) - 1);\n    }\n\n    // const onClick_check = () =>{\n    //     setIsChecked(!isChecked);\n    // }\n\n    const onClick_sum = () =>{\n        const sum = quantity * sell_price;\n        set_sum_price(sum);\n    }\n\n    const onChange_quantity = (e) =>{\n        set_quantity(e.target.value);\n    }\n\n    const onChange_sum_price = (e) =>{\n        set_quantity(quantity);\n        set_sell_price(sell_price);\n        const sum = quantity * sell_price \n        set_sum_price(sum);\n    }\n\n    const clear_fun = () =>{\n        set_quantity(0);\n        set_sell_price(0);\n        set_sum_price(0);\n    }\n\n    function checkOnlyOne(id) {\n        console.log('id', id);\n        let checkPick = document.getElementsByName('check');\n        Array.prototype.forEach.call(checkPick, function (el) {\n          console.log('el', el);\n          el.checked = false;\n        });\n        id.target.checked = true;\n        setCheckValue(id.target.defaultValue);\n    }\n\n\n    return(\n    <div>\n        <div className=\"price_check\">\n                        <span className=\"check_left\">주문 구분</span>\n                        <input type=\"radio\" name=\"check\" value=\"1\" onClick={(e) => checkOnlyOne(e)}/>지정가  \n                        <input type=\"radio\" name=\"check\" value=\"2\" onClick={(e) => checkOnlyOne(e)}/>시작가\n                        <input type=\"radio\" name=\"check\" value=\"3\" onClick={(e) => checkOnlyOne(e)}/> 예약, 지정가 \n        </div>\n        <div className=\"sell_price\">\n                        매도 가격(KRW)\n                        <input onChange={onChange_sell} value={sell_price} className=\"input_sell\"/>\n                        <button onClick={onClick_plus}>+</button>\n                        <button onClick={onClick_minus}>-</button>\n        </div>\n        <div className=\"quantity_price\">\n                        주문 수량\n                        <input onChange={onChange_quantity} value={quantity} className=\"input_quantity\"/>\n                        <button onClick={onClick_sum}>합계</button>\n        </div>\n        <div className=\"quantity_price\">\n                        주문 총액(KRW)\n                        <input onChange={onChange_sum_price} value={sum_price} className=\"input_sum\"/>\n        </div>\n        <div className=\"clearsell_btn\">\n        <Button className=\"clear_btn\" onClick={clear_fun}>초기화</Button>   \n        <Button className=\"sell_btn\">매도</Button>\n        </div>\n    </div>\n    )\n    }\n\n\nexport default Trade_selling;","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_chart/Coin_mp.js",["159"],[],"// import { useQuery } from \"react-query\";\n// import axios from 'axios'\n\n// const Coin_marget_price = [];\n\n// const get_oneminute = async(coin_name) =>{\n//     await axios.get('https://api.upbit.com/v1/candles/minutes/1/?market=KRW-'+ coin_name +'&count=1').then((res) =>{\n//       for(let i = 0; i < res.data.length; i++){\n//           if(res.data[i].market != null){\n//                   setcoinInfo(prev => {return [...prev, res.data[i]]})\n//           }else{\n//               alert(\"error\");\n//           }\n//       }\n//     })\n// }\n\n// const Coin_mp = () =>{\n//     const Coin_List = ['BTC', 'ETH', 'XRP', 'ETC', 'ADA', 'SAND', 'EOS', 'SOL', 'DOGE']\n//     for(var i=0;i<9;i++){\n//         Coin_marget_price[i] = get_oneminute(Coin_List[i]);\n//     }\n//     for(var i=0;i<9;i++){\n//         console.log(Coin_marget_price[i]);\n//     }\n// }\n\n\n// export default Coin_mp;","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_Trade/Trade_buying.js",["160"],[],"import React from \"react\";\nimport {useEffect, useState } from \"react\";\nimport {Button} from 'react-bootstrap';\n\n\nconst Trade_buying = () =>{\n    const [sell_price, set_sell_price] = useState(0);\n    const [quantity, set_quantity ] = useState(0);\n    const [sum_price , set_sum_price] = useState(0);\n    const [ checkValue, setCheckValue ] = useState('');\n    const [isBuying, setIsBuying] = useState(true);\n\n \n    const onChange_sell = (e) =>{\n        set_sell_price(e.target.value);\n        // set_quantity(quantity);\n        // const sum = quantity * sell_price;\n        // set_sum_price(sum);\n    }\n    const onClick_plus = () =>{\n        set_sell_price(parseInt(sell_price) + 1);\n    }\n    const onClick_minus = () =>{\n        set_sell_price(parseInt(sell_price) - 1);\n    }\n\n\n\n    const onClick_sum = () =>{\n        const sum = quantity * sell_price;\n        set_sum_price(sum);\n    }\n\n    const onChange_quantity = (e) =>{\n        set_quantity(e.target.value);\n    }\n\n    const onChange_sum_price = (e) =>{\n        set_quantity(quantity);\n        set_sell_price(sell_price);\n        const sum = quantity * sell_price \n        set_sum_price(sum);\n    }\n\n    const clear_fun = () =>{\n        set_quantity(0);\n        set_sell_price(0);\n        set_sum_price(0);\n    }\n\n    function checkOnlyOne(id) {\n        console.log('id', id);\n        let checkPick = document.getElementsByName('check');\n        Array.prototype.forEach.call(checkPick, function (el) {\n          console.log('el', el);\n          el.checked = false;\n        });\n        id.target.checked = true;\n        setCheckValue(id.target.defaultValue);\n    }\n\n    return(\n        <div>\n            <div className=\"price_check\">\n                            <span className=\"check_left\">주문 구분</span>\n                            <input type=\"radio\" name=\"check\" value=\"1\" onClick={(e) => checkOnlyOne(e)}/>지정가  \n                            <input type=\"radio\" name=\"check\" value=\"2\" onClick={(e) => checkOnlyOne(e)}/>시작가\n                            <input type=\"radio\" name=\"check\" value=\"3\" onClick={(e) => checkOnlyOne(e)}/> 예약, 지정가 \n            </div>\n            <div className=\"sell_price\">\n                            매수 가격(KRW)\n                            <input onChange={onChange_sell} value={sell_price} className=\"input_sell\"/>\n                            <button onClick={onClick_plus}>+</button>\n                            <button onClick={onClick_minus}>-</button>\n            </div>\n            <div className=\"quantity_price\">\n                            주문 수량\n                            <input onChange={onChange_quantity} value={quantity} className=\"input_quantity\"/>\n                            <button onClick={onClick_sum}>합계</button>\n            </div>\n            <div className=\"quantity_price\">\n                            주문 총액(KRW)\n                            <input onChange={onChange_sum_price} value={sum_price} className=\"input_sum\"/>\n            </div>\n            <div className=\"clearbuying_btn\">\n                <Button className=\"clear_btn\" onClick={clear_fun}>초기화</Button>   \n                <Button className=\"buying_btn\" >매수</Button>\n            </div>\n    </div>  \n    )\n}\n\n\nexport default Trade_buying;","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/Coin_chart/CoinItem.js",["161"],[],"import React from \"react\";\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport {useDispatch} from \"react-redux\";\nimport { change_coin } from '../_actions/chart_action';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// class CoinItem extends React.Component{\n\n    function CoinItem(props){\n        const disPatch = useDispatch();\n        const handleclick = (props) =>{\n            console.log(props);\n            disPatch(change_coin(props.tag));\n        }\n    // export default function CoinItem(){\n    // coinProvider = () =>{\n    //     const coin = this.props.tag;\n    //     // return(CoinChange(coin));\n    // }\n    // render(){\n        // const useStyles = makeStyles(theme => ({\n        //     cell_short: {\n        //         fontSize: \"10px\",\n        //         width: 100,\n        //         backgroundColor: 'green'\n          \n        //       },\n        //   }));\n        // const classes = useStyles();\n        return(\n            <TableRow className=\"Table_coin\">\n                <TableCell onClick={()=>handleclick(props)} className=\"props_tag\">{props.name_ko}</TableCell>\n                <TableCell onClick={()=>handleclick(props)} className=\"props_name_ko\">{props.currency}</TableCell>\n                <TableCell onClick={()=>handleclick(props)} className=\"props_currency\">{props.tag}</TableCell>\n            </TableRow>\n        )\n    }\n// }\n\nexport default CoinItem;\n","/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_actions/chart_action.js",["162"],[],"import axios from 'axios';\nimport {\n    BTC, XRP,\n} from './types';\n\nexport const change_coin = (props) =>\n    ({\n        type: XRP, \n        str:props\n    });\n\n",{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":"168","severity":1,"message":"169","line":14,"column":1,"nodeType":"170","endLine":29,"endColumn":2},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"175","line":17,"column":10,"nodeType":"173","messageId":"174","endLine":17,"endColumn":20},{"ruleId":"171","severity":1,"message":"176","line":17,"column":22,"nodeType":"173","messageId":"174","endLine":17,"endColumn":35},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"163"},"Parsing error: require() of ES Module /Users/jeongdahyun/coin_trading_project/coin_trading_project/client/node_modules/eslint-scope/lib/definition.js from /Users/jeongdahyun/coin_trading_project/coin_trading_project/client/node_modules/babel-eslint/lib/require-from-eslint.js not supported.\nInstead change the require of definition.js in /Users/jeongdahyun/coin_trading_project/coin_trading_project/client/node_modules/babel-eslint/lib/require-from-eslint.js to a dynamic import() which is available in all CommonJS modules.","no-native-reassign",["177"],"no-negated-in-lhs",["178"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'coinApiKey' is assigned a value but never used.","'setCoinApiKey' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]