{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\vs_code\\\\Jayco_restart\\\\coin_trading_project\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as ReactDOMClient from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport { createRoot } from 'react-dom/client';\nimport { configureStore } from '@reduxjs/toolkit';\nimport promise from 'redux-promise';\nimport Reducer from './_reducers';\nimport chart_reducer from '../src/_reducers/chart_reducer';\nimport user_reducer from './_reducers/user_reducer';\n\n//const createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst devTools = window._REDUX_DEVTOOLS_EXTENSION_ && window._REDUX_DEVTOOLS_EXTENSION_();\n/*\r\nconst store = createStoreWithMiddleware(Reducer, \r\n  window._REDUX_DEVTOOLS_EXTENSION_ &&\r\n  window._REDUX_DEVTOOLS_EXTENSION_());\r\n  */\n\nconst store = configureStore({\n  reducer: Reducer,\n  middleware: [promiseMiddleware, ReduxThunk]\n  //devTools: devTools\n});\n\nconst store1 = createStore(chart_reducer);\nconst root = createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    serverState: devTools,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this));\n\n/*\r\nReactDOM.render(\r\n  <Provider store={ createStoreWithMiddleware(Reducer,\r\n    window._REDUX_DEVTOOLS_EXTENSION_&&\r\n    window._REDUX_DEVTOOLS_EXTENSION_())}>\r\n      <App/>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","ReactDOMClient","Provider","applyMiddleware","createStore","promiseMiddleware","ReduxThunk","createRoot","configureStore","promise","Reducer","chart_reducer","user_reducer","devTools","window","_REDUX_DEVTOOLS_EXTENSION_","store","reducer","middleware","store1","root","document","getElementById","render"],"sources":["C:/Users/User/OneDrive/Desktop/vs_code/Jayco_restart/coin_trading_project/client/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as ReactDOMClient from \"react-dom/client\";\r\nimport {Provider} from \"react-redux\";\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport promise from 'redux-promise';\r\nimport Reducer from './_reducers';\r\nimport  chart_reducer  from '../src/_reducers/chart_reducer'\r\nimport user_reducer from './_reducers/user_reducer';\r\n\r\n//const createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore)\r\nconst devTools = window._REDUX_DEVTOOLS_EXTENSION_ &&\r\n                window._REDUX_DEVTOOLS_EXTENSION_();\r\n/*\r\nconst store = createStoreWithMiddleware(Reducer, \r\n  window._REDUX_DEVTOOLS_EXTENSION_ &&\r\n  window._REDUX_DEVTOOLS_EXTENSION_());\r\n  */\r\n\r\nconst store = configureStore({\r\n  reducer: Reducer,\r\n  middleware: [promiseMiddleware, ReduxThunk],\r\n  //devTools: devTools\r\n})\r\n\r\nconst store1 = createStore(chart_reducer);\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store} serverState = {devTools}>\r\n         <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n/*\r\nReactDOM.render(\r\n  <Provider store={ createStoreWithMiddleware(Reducer,\r\n    window._REDUX_DEVTOOLS_EXTENSION_&&\r\n    window._REDUX_DEVTOOLS_EXTENSION_())}>\r\n      <App/>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n*/\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAO,KAAKC,cAAc,MAAM,kBAAkB;AAClD,SAAQC,QAAQ,QAAO,aAAa;AACpC,SAASC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,iBAAiB,MAAM,eAAe;AAC7C,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAQC,aAAa,MAAO,gCAAgC;AAC5D,OAAOC,YAAY,MAAM,0BAA0B;;AAEnD;AAAA;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,0BAA0B,IAClCD,MAAM,CAACC,0BAA0B,EAAE;AACnD;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGR,cAAc,CAAC;EAC3BS,OAAO,EAAEP,OAAO;EAChBQ,UAAU,EAAE,CAACb,iBAAiB,EAAEC,UAAU;EAC1C;AACF,CAAC,CAAC;;AAEF,MAAMa,MAAM,GAAGf,WAAW,CAACO,aAAa,CAAC;AAEzC,MAAMS,IAAI,GAAGb,UAAU,CAACc,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACxDF,IAAI,CAACG,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,QAAQ;IAAC,KAAK,EAAIP,KAAM;IAAC,WAAW,EAAIH,QAAS;IAAA,uBAC7C,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA;AACD;EAAA;EAAA;EAAA;AAAA,QACM,CACpB;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAb,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}