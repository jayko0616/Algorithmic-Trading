{"ast":null,"code":"var _jsxFileName = \"/Users/jeongdahyun/coin_trading_project/jayco/client/src/Coin_chart/ApexChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport dayjs from 'dayjs';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Button } from \"react-bootstrap\";\nimport \"./ApexChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApexChart() {\n  _s();\n\n  const [minute_, set_minute_] = useState(60);\n  const [time_, set_time_] = useState(true);\n  const [coinInfo, setcoinInfo] = useState([]);\n  const coin_name_ = useSelector(store => store.str); //Upbit API\n  // 일별로 데이터 받을 때 \n\n  const getApi_day = async coin_name => {\n    await axios.get('https://api.upbit.com/v1/candles/days/?market=KRW-' + coin_name + '&count=100').then(res => {\n      for (let i = 0; i < res.data.length; i++) {\n        if (res.data[i].market != null) {\n          setcoinInfo(prev => {\n            return [...prev, res.data[i]];\n          });\n        } else {\n          alert(\"error\");\n        }\n      }\n    }); // console.log(minute_);\n  }; // 분당 데이터 받을 때 \n\n\n  const getApi_minute = async coin_name => {\n    await axios.get('https://api.upbit.com/v1/candles/minutes/' + minute_ + '/?market=KRW-' + coin_name + '&count=100').then(res => {\n      for (let i = 0; i < res.data.length; i++) {\n        if (res.data[i].market != null) {\n          setcoinInfo(prev => {\n            return [...prev, res.data[i]];\n          });\n        } else {\n          alert(\"error\");\n        }\n      }\n    }); // console.log(minute_);\n  };\n\n  useEffect(() => {\n    time_ ? getApi_day(coin_name_) : getApi_minute(coin_name_);\n  }, [coin_name_, minute_, time_]); // 시간을 바꾸는 함수 \n\n  const change_minute = time => {\n    set_minute_(time);\n    set_time_(false);\n  }; // 일을 바꾸는 함수 \n\n\n  const change_day = () => {\n    // set_minute_(time);\n    set_time_(true);\n  };\n\n  const [time, setTime] = useState([]);\n  const [open, setOpen] = useState([]);\n  const [low, setLow] = useState([]);\n  const [close, setClose] = useState([]);\n  const [high, setHigh] = useState([]);\n  const [data_ex, setData_ex] = useState([]);\n  time.length = 0;\n  open.length = 0;\n  low.length = 0;\n  close.length = 0;\n  high.length = 0;\n  data_ex.length = 0; // console.log(xrpInfo)\n\n  coinInfo.map(_ref => {\n    let {\n      candle_date_time_kst,\n      opening_price,\n      high_price,\n      low_price,\n      trade_price\n    } = _ref;\n    time.push(candle_date_time_kst);\n    open.push(opening_price);\n    high.push(high_price);\n    low.push(low_price);\n    close.push(trade_price);\n  });\n  time.reverse();\n  open.reverse();\n  high.reverse();\n  low.reverse();\n  close.reverse();\n\n  for (let i = 0; i < time.length; i++) {\n    data_ex.push({\n      x: time[i],\n      y: [open[i], high[i], low[i], close[i]]\n    });\n  }\n\n  coinInfo.length = 0;\n  const series = [{\n    name: 'candle',\n    data: data_ex\n  }];\n  const options = {\n    chart: {\n      height: 350,\n      type: 'candlestick'\n    },\n    title: {\n      text: coin_name_ + \" Chart\",\n      align: 'left'\n    },\n    subtitle: {\n      text: close[99] + \" KRW\",\n      align: 'left',\n      style: {\n        fontSize: '20px',\n        fontWeight: 'bold',\n        fontFamily: undefined,\n        color: '#50bcdf'\n      }\n    },\n    xaxis: {\n      type: 'category',\n      labels: {\n        formatter: function (val) {\n          return dayjs(val).format('MMM DD HH:mm');\n        }\n      }\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn_oneminite\",\n        onClick: () => change_minute(1),\n        children: \"1\\uBD84\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn_thirtyminite\",\n        onClick: () => change_minute(30),\n        children: \"30\\uBD84\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn_onehour\",\n        onClick: () => change_minute(60),\n        children: \"1\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn_fourhour\",\n        onClick: () => change_minute(240),\n        children: \"4\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn_oneday\",\n        onClick: () => change_day(),\n        children: \"1\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"candlestick\",\n      height: 400,\n      width: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 3\n  }, this);\n} // export default connect(mapStateToProps)(ApexChart);\n// export default ApexChart;\n\n_s(ApexChart, \"Su4kH638kHbQ875OrSHDT+wzI9c=\", false, function () {\n  return [useSelector];\n});\n\n_c = ApexChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApexChart\");","map":{"version":3,"names":["React","useEffect","useState","ReactApexChart","dayjs","axios","useSelector","Button","ApexChart","minute_","set_minute_","time_","set_time_","coinInfo","setcoinInfo","coin_name_","store","str","getApi_day","coin_name","get","then","res","i","data","length","market","prev","alert","getApi_minute","change_minute","time","change_day","setTime","open","setOpen","low","setLow","close","setClose","high","setHigh","data_ex","setData_ex","map","candle_date_time_kst","opening_price","high_price","low_price","trade_price","push","reverse","x","y","series","name","options","chart","height","type","title","text","align","subtitle","style","fontSize","fontWeight","fontFamily","undefined","color","xaxis","labels","formatter","val","format","yaxis","tooltip","enabled"],"sources":["/Users/jeongdahyun/coin_trading_project/jayco/client/src/Coin_chart/ApexChart.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport dayjs from 'dayjs'\nimport axios from 'axios'\nimport {useSelector} from 'react-redux';\nimport { Button } from \"react-bootstrap\";\nimport \"./ApexChart.css\";\n\n\nexport default function ApexChart(){\n    const [minute_, set_minute_] = useState(60);\n    const [time_, set_time_] = useState(true);\n    const [coinInfo, setcoinInfo] = useState([]);\n    const coin_name_ = useSelector((store)=>store.str);\n\n\n//Upbit API\n    // 일별로 데이터 받을 때 \n    const getApi_day = async(coin_name) =>{ \n      await axios.get('https://api.upbit.com/v1/candles/days/?market=KRW-'+ coin_name +'&count=100').then((res) =>{\n      for(let i = 0; i < res.data.length; i++){\n          if(res.data[i].market != null){\n                  setcoinInfo(prev => {return [...prev, res.data[i]]})\n          }else{\n              alert(\"error\");\n          }\n      }\n      }) \n      // console.log(minute_);\n    }\n    // 분당 데이터 받을 때 \n    const getApi_minute = async(coin_name) =>{\n      await axios.get('https://api.upbit.com/v1/candles/minutes/'+minute_+'/?market=KRW-'+ coin_name +'&count=100').then((res) =>{\n      for(let i = 0; i < res.data.length; i++){\n          if(res.data[i].market != null){\n                  setcoinInfo(prev => {return [...prev, res.data[i]]})\n          }else{\n              alert(\"error\");\n          }\n      }\n      }) \n      // console.log(minute_);\n    }\n    useEffect(() => {\n      time_ ? (getApi_day(coin_name_)) : (getApi_minute(coin_name_));\n    },[coin_name_ , minute_, time_])\n\n    // 시간을 바꾸는 함수 \n    const change_minute = (time) =>{\n      set_minute_(time);\n      set_time_(false);\n    }\n\n    // 일을 바꾸는 함수 \n    const change_day = () =>{  \n      // set_minute_(time);\n      set_time_(true);\n    }\n\n    const [time, setTime] = useState([]);\n    const [open, setOpen] = useState([]);\n    const [low, setLow] = useState([]);\n    const [close, setClose] = useState([]);\n    const [high, setHigh] = useState([]);\n    const [data_ex, setData_ex] = useState([]);\n    time.length = 0;\n    open.length = 0;\n    low.length = 0;\n    close.length = 0;\n    high.length = 0;\n    data_ex.length = 0;\n\n\n    // console.log(xrpInfo)\n    coinInfo.map(({candle_date_time_kst, opening_price, high_price, low_price, trade_price}) =>{\n      time.push(candle_date_time_kst);\n      open.push(opening_price);\n      high.push(high_price);\n      low.push(low_price);\n      close.push(trade_price);\n    });\n\n    time.reverse();\n    open.reverse();\n    high.reverse();\n    low.reverse();\n    close.reverse();\n\n    for(let i=0;i<time.length;i++){\n      data_ex.push({x:time[i], y:[open[i],high[i],low[i],close[i]]});\n    }\n\n    coinInfo.length = 0;\n    const series = [{\n      name: 'candle',\n      data: data_ex\n      },] \n\n    const options = {\n            chart: {\n              height: 350,\n              type: 'candlestick',\n            },\n            title: {\n              text: coin_name_+\" Chart\",\n              align: 'left'\n            },\n            subtitle:{\n              text: close[99]+ \" KRW\",\n              align: 'left',\n              style: {\n                fontSize:  '20px',\n                fontWeight:  'bold',\n                fontFamily:  undefined,\n                color:  '#50bcdf'\n              },\n            },\n            xaxis: {\n              type: 'category',\n              labels: {\n                formatter: function(val){\n                  return dayjs(val).format('MMM DD HH:mm')\n                }\n              }\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true\n              }\n            }\n          }\n\n      return (\n  <div id=\"chart\">\n    <div>\n    <Button className=\"btn_oneminite\" onClick={() => change_minute(1)} >1분</Button>\n    <Button className=\"btn_thirtyminite\" onClick={() => change_minute(30)}>30분</Button>\n    <Button className=\"btn_onehour\" onClick={() => change_minute(60)}>1시간</Button>\n    <Button className=\"btn_fourhour\" onClick={() => change_minute(240)}>4시간</Button>  \n    <Button className=\"btn_oneday\" onClick={() => change_day()}>1일</Button> \n    </div> \n    {/* <Button onClick={()=>setname('BTC')}>클릭</Button> */}\n<ReactApexChart options={options} series={series} type=\"candlestick\" height={400} width={500}/>\n  </div>\n      );\n}\n\n\n// export default connect(mapStateToProps)(ApexChart);\n// export default ApexChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}