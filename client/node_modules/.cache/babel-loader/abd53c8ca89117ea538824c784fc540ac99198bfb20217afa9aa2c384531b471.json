{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, TRADING_START, LOGOUT_USER } from './types';\n\n/**\n * 서버로 로그인 요청 함수\n * @param {*} User { email, password }\n * @returns \n */\nexport function loginUser(dataToSubmit) {\n  const request = axios.post('/api/users/login', dataToSubmit).then(response => response.data);\n\n  //reducer에 넘김 \n  return {\n    type: LOGIN_USER,\n    payload: request\n  };\n}\n\n/**\n * 서버로 회원가입 요청 함수\n * @param {*} User { name, email, password }\n * @returns \n */\nexport function registerUser(dataToSubmit) {\n  const request = axios.post('/api/users/register', dataToSubmit).then(response => response.data);\n  //reducer에 넘김 \n  return {\n    type: REGISTER_USER,\n    payload: request\n  };\n}\nexport function logout() {\n  const request = axios.get('/api/users/logout').then(response => response.data);\n\n  //reducer에 넘김 \n  return {\n    type: LOGOUT_USER,\n    payload: request\n  };\n}\n/**\n * 코인 api key 입력받아 일치 확인 요청 함수 \n * @param {*} String apikey \n * @returns \n */\nexport function tradingStart(dataToSubmit) {\n  console.log(\"coin/trading으로 요청 보냄\");\n  console.log(dataToSubmit);\n  console.log(dataToSubmit.coinApiKey);\n  const request = axios.post('/api/users/coin/trading', dataToSubmit).then(response => response.data);\n  return {\n    type: TRADING_START,\n    payload: request\n  };\n}\n\n/**\n * 로그인할 때 받은 api key를 파이썬에 넘기는 요청 함수 \n * @param {*} body - secretkey, accesskey \n * @returns ApiKey_Set; true or false\n */\nexport function setApi(dataToSubmit) {\n  const request = axios.get('/api/users/coin/set', dataToSubmit).then(response => response.data);\n  return {\n    type: ApiKey_Set,\n    payload: request\n  };\n}","map":{"version":3,"names":["axios","LOGIN_USER","REGISTER_USER","TRADING_START","LOGOUT_USER","loginUser","dataToSubmit","request","post","then","response","data","type","payload","registerUser","logout","get","tradingStart","console","log","coinApiKey","setApi","ApiKey_Set"],"sources":["/Users/jeongdahyun/coin_trading_project/coin_trading_project/client/src/_actions/user_action.js"],"sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    TRADING_START,\n    LOGOUT_USER\n} from './types';\n\n/**\n * 서버로 로그인 요청 함수\n * @param {*} User { email, password }\n * @returns \n */\nexport function loginUser(dataToSubmit) {\n  const request = axios.post('/api/users/login', dataToSubmit)\n    .then(response => response.data);\n  \n  //reducer에 넘김 \n  return {\n    type: LOGIN_USER,\n    payload: request\n  }\n}\n\n/**\n * 서버로 회원가입 요청 함수\n * @param {*} User { name, email, password }\n * @returns \n */\nexport function registerUser(dataToSubmit) {\n  const request = axios.post('/api/users/register', dataToSubmit)\n    .then(response => response.data);\n  //reducer에 넘김 \n  return {\n    type: REGISTER_USER,\n    payload: request\n  }\n}\n\nexport function logout() {\n  const request = axios.get('/api/users/logout')\n    .then(response => response.data);\n  \n  //reducer에 넘김 \n  return {\n    type: LOGOUT_USER,\n    payload: request\n  }\n}\n/**\n * 코인 api key 입력받아 일치 확인 요청 함수 \n * @param {*} String apikey \n * @returns \n */\nexport function tradingStart(dataToSubmit) {\n  console.log(\"coin/trading으로 요청 보냄\")\n  console.log(dataToSubmit)\n  console.log(dataToSubmit.coinApiKey)\n    const request = axios.post('/api/users/coin/trading', dataToSubmit)\n      .then(response =>  response.data )\n\n      return{\n        type: TRADING_START,\n        payload: request\n      }\n}\n\n/**\n * 로그인할 때 받은 api key를 파이썬에 넘기는 요청 함수 \n * @param {*} body - secretkey, accesskey \n * @returns ApiKey_Set; true or false\n */\nexport function setApi(dataToSubmit) {\n  const request = axios.get('/api/users/coin/set', dataToSubmit)\n    .then(response => response.data);\n\n  return { \n    type: ApiKey_Set,\n    payload: request\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,WAAW,QACR,SAAS;;AAEhB;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAAS,CAACC,YAAY,EAAE;EACtC,MAAMC,OAAO,GAAGP,KAAK,CAACQ,IAAI,CAAC,kBAAkB,EAAEF,YAAY,CAAC,CACzDG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;;EAElC;EACA,OAAO;IACLC,IAAI,EAAEX,UAAU;IAChBY,OAAO,EAAEN;EACX,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASO,YAAY,CAACR,YAAY,EAAE;EACzC,MAAMC,OAAO,GAAGP,KAAK,CAACQ,IAAI,CAAC,qBAAqB,EAAEF,YAAY,CAAC,CAC5DG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EAClC;EACA,OAAO;IACLC,IAAI,EAAEV,aAAa;IACnBW,OAAO,EAAEN;EACX,CAAC;AACH;AAEA,OAAO,SAASQ,MAAM,GAAG;EACvB,MAAMR,OAAO,GAAGP,KAAK,CAACgB,GAAG,CAAC,mBAAmB,CAAC,CAC3CP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;;EAElC;EACA,OAAO;IACLC,IAAI,EAAER,WAAW;IACjBS,OAAO,EAAEN;EACX,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,YAAY,CAACX,YAAY,EAAE;EACzCY,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnCD,OAAO,CAACC,GAAG,CAACb,YAAY,CAAC;EACzBY,OAAO,CAACC,GAAG,CAACb,YAAY,CAACc,UAAU,CAAC;EAClC,MAAMb,OAAO,GAAGP,KAAK,CAACQ,IAAI,CAAC,yBAAyB,EAAEF,YAAY,CAAC,CAChEG,IAAI,CAACC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAE;EAElC,OAAM;IACJC,IAAI,EAAET,aAAa;IACnBU,OAAO,EAAEN;EACX,CAAC;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASc,MAAM,CAACf,YAAY,EAAE;EACnC,MAAMC,OAAO,GAAGP,KAAK,CAACgB,GAAG,CAAC,qBAAqB,EAAEV,YAAY,CAAC,CAC3DG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EAElC,OAAO;IACLC,IAAI,EAAEU,UAAU;IAChBT,OAAO,EAAEN;EACX,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}