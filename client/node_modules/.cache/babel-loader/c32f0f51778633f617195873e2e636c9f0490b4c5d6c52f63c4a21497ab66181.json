{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parkn\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\JJIN\\\\coin_trading_project\\\\client\\\\src\\\\components\\\\views\\\\PortfolioPage\\\\Portfolio.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../../../_actions/user_action';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PortfolioPage() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [Email, setEmail] = useState(\"\");\n  const [Name, setName] = useState(\"\");\n  const [PhoneNumber, setPhoneNumber] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\n  const [ApiKey, setApiKey] = useState(\"\");\n  //const [ConfirmApiKey, setConfirmApiKey] = useState(\"\");\n  const [AccessKey, setAccessKey] = useState(\"\");\n  //const [ConfirmAccessKey, setConfirmAccessKey] = useState(\"\");\n\n  const onEmailHandler = event => {\n    setEmail(event.currentTarget.value);\n  };\n  const onNameHandler = event => {\n    setName(event.currentTarget.value);\n  };\n  const onPhoneNumberHandler = event => {\n    setPhoneNumber(event.currentTarget.value);\n  };\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n  const onConfirmPasswordHandler = event => {\n    setConfirmPassword(event.currentTarget.value);\n  };\n  const onApiKeyHandler = event => {\n    setApiKey(event.currentTarget.value);\n  };\n  const onAccessKeyHandler = event => {\n    setAccessKey(event.currentTarget.value);\n  };\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    if (Name === \"\") return alert(\"이름을 입력해주세요.\");\n    if (PhoneNumber === \"\") return alert(\"핸드폰 번호를 입력해주세요.\");\n    if (Password === \"\") return alert(\"비밀번호를 입력해주세요.\");\n    if (ApiKey === \"\") return alert(\"업비트 API Secret Key를 입력해주세요.\");\n    if (AccessKey === \"\") return alert(\"업비트 API Access Key를 입력해주세요.\");\n    if (Password !== ConfirmPassword) {\n      return alert(\"비밀번호가 일치하지 않습니다.\");\n    }\n    let body = {\n      name: Name,\n      email: Email,\n      password: Password,\n      phone: PhoneNumber,\n      coinApiKey: ApiKey,\n      accessKey: AccessKey\n    };\n    console.log(Email);\n    console.log(Name);\n    console.log(PhoneNumber);\n    console.log(ApiKey);\n    console.log(AccessKey);\n    console.log(body);\n    dispatch(registerUser(body)).then(response => {\n      console.log(response);\n      if (response.payload.success) {\n        alert(\"회원가입 성공!\");\n        navigate('/'); // landing page 로 \n      } else {\n        alert(\"회원가입 실패!\", response.payload.err);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: Email,\n        onChange: onEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"\",\n        value: Name,\n        onChange: onNameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"\",\n        value: PhoneNumber,\n        onChange: onPhoneNumberHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: Password,\n        onChange: onPasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: ConfirmPassword,\n        onChange: onConfirmPasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"UpBit API Secret KEY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: ApiKey,\n        onChange: onApiKeyHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"UpBit API Access KEY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: AccessKey,\n        onChange: onAccessKeyHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(PortfolioPage, \"VaeFlu/qZjihqC9mkUPNSHiSz9Q=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = PortfolioPage;\nexport default PortfolioPage;\nvar _c;\n$RefreshReg$(_c, \"PortfolioPage\");","map":{"version":3,"names":["React","useState","useDispatch","registerUser","useNavigate","PortfolioPage","dispatch","navigate","Email","setEmail","Name","setName","PhoneNumber","setPhoneNumber","Password","setPassword","ConfirmPassword","setConfirmPassword","ApiKey","setApiKey","AccessKey","setAccessKey","onEmailHandler","event","currentTarget","value","onNameHandler","onPhoneNumberHandler","onPasswordHandler","onConfirmPasswordHandler","onApiKeyHandler","onAccessKeyHandler","onSubmitHandler","preventDefault","alert","body","name","email","password","phone","coinApiKey","accessKey","console","log","then","response","payload","success","err","display","justifyContent","alignItems","width","height","flexDirection"],"sources":["C:/Users/parkn/OneDrive/바탕 화면/JJIN/coin_trading_project/client/src/components/views/PortfolioPage/Portfolio.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { registerUser } from '../../../_actions/user_action';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction PortfolioPage() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [PhoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [ApiKey, setApiKey] = useState(\"\");\r\n  //const [ConfirmApiKey, setConfirmApiKey] = useState(\"\");\r\n  const [AccessKey, setAccessKey] = useState(\"\");\r\n  //const [ConfirmAccessKey, setConfirmAccessKey] = useState(\"\");\r\n  \r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n \r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value)\r\n  }\r\n\r\n  const onPhoneNumberHandler = (event) => {\r\n    setPhoneNumber(event.currentTarget.value)\r\n  }\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n\r\n  const onConfirmPasswordHandler = (event) => {\r\n    setConfirmPassword(event.currentTarget.value)\r\n  }\r\n\r\n  const onApiKeyHandler = (event) => {\r\n    setApiKey(event.currentTarget.value)\r\n  }\r\n\r\n  const onAccessKeyHandler = (event) => {\r\n    setAccessKey(event.currentTarget.value)\r\n  }\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault(); \r\n\r\n    if(Name === \"\")\r\n      return alert(\"이름을 입력해주세요.\")\r\n    if(PhoneNumber === \"\")\r\n      return alert(\"핸드폰 번호를 입력해주세요.\")\r\n    if(Password === \"\")\r\n      return alert(\"비밀번호를 입력해주세요.\")\r\n    if(ApiKey === \"\")\r\n      return alert(\"업비트 API Secret Key를 입력해주세요.\")\r\n    if(AccessKey === \"\")\r\n      return alert(\"업비트 API Access Key를 입력해주세요.\")\r\n    \r\n    if(Password !== ConfirmPassword){\r\n      return alert(\"비밀번호가 일치하지 않습니다.\")\r\n    }\r\n\r\n    let body = {\r\n      name: Name,\r\n      email: Email,\r\n      password: Password,\r\n      phone: PhoneNumber,\r\n      coinApiKey: ApiKey,\r\n      accessKey: AccessKey\r\n    }\r\n\r\n    console.log(Email);\r\n    console.log(Name);\r\n    console.log(PhoneNumber);\r\n    console.log(ApiKey);\r\n    console.log(AccessKey);\r\n\r\n    console.log(body);\r\n\r\n    dispatch(registerUser(body))\r\n      .then(response => {\r\n        console.log(response);\r\n        if(response.payload.success) {\r\n          alert(\"회원가입 성공!\")\r\n          navigate('/') // landing page 로 \r\n        }\r\n        else {\r\n          alert(\"회원가입 실패!\", response.payload.err)\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex', justifyContent: 'center', alignItems: 'center',\r\n      width: '100%', height: '100vh'\r\n    }}>\r\n        <form style={{ display: 'flex', flexDirection: 'column'}}\r\n          onSubmit={onSubmitHandler}\r\n        >\r\n          <label>Email</label>\r\n          <input type=\"email\" value={Email} onChange={onEmailHandler}></input>\r\n          \r\n          <label>Name</label>\r\n          <input type=\"\" value={Name} onChange={onNameHandler}></input>\r\n          \r\n          <label>Phone Number</label>\r\n          <input type=\"\" value={PhoneNumber} onChange={onPhoneNumberHandler}></input>\r\n          \r\n          <label>Password</label>\r\n          <input type=\"password\" value={Password} onChange={onPasswordHandler}></input>\r\n          \r\n          <label>Confirm Password</label>\r\n          <input type=\"password\" value={ConfirmPassword} onChange={onConfirmPasswordHandler}></input>\r\n          \r\n          <label>UpBit API Secret KEY</label>\r\n          <input type=\"password\" value={ApiKey} onChange={onApiKeyHandler}></input>\r\n          \r\n          <label>UpBit API Access KEY</label>\r\n          <input type=\"password\" value={AccessKey} onChange={onAccessKeyHandler}></input>\r\n          \r\n          <br />\r\n          <button>\r\n            회원가입\r\n          </button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PortfolioPage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}